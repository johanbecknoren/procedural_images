#version 430 core

layout (triangles, equal_spacing, ccw) in;

uniform mat4 mvp;
uniform vec3 camPos;

in TCSData {
	vec3 world_pos_tes;
} TCSin[];

out TESOut {
	vec3 world_pos_frag;
} TESData;

vec3 interpolate3D(vec3 v0, vec3 v1, vec3 v2)
{
   	 return vec3(gl_TessCoord.x) * v0 + vec3(gl_TessCoord.y) * v1 + vec3(gl_TessCoord.z) * v2;
}

void main(void) {
	// world pos for CP
	vec3 pos = interpolate3D(gl_in[0].gl_Position.xyz, gl_in[1].gl_Position.xyz, gl_in[2].gl_Position.xyz);
	//TESData.world_pos_frag = interpolate3D(TCSin[0].world_pos_tes, TCSin[1].world_pos_tes, TCSin[2].world_pos_tes);

	//vec4 position = TCSin[0].world_pos_tes;
	//position.xy += gl_TessCoord.xy*2.0f - 1.0f;

	// Displace vertex along normal direction according to height map sample
	TESData.world_pos_frag = pos;
	gl_Position = mvp * vec4(pos, 1.0f);
}